{"version":3,"sources":["/home/andy/programming/thrifty-threesome-thriller/assets/script/Card.ms"],"names":[],"mappings":";;;;CAMA,2BACW;EAAC,YAAA,KACK;;0BACf,YAAU,CAAC,EAAE,EAAE,EAAE;0BACjB,iBAAe;0BACf,oBAAkB;EAAA;YAEP,MAAM,OACM;SA4Kf;GAAA,YA5KE;GA4KF,aA3KG;GA2KH;;cAvKG;SAuKH;UAxBc,SAwBd;;cApKG;SAoKH;kBAAA,WApKF;EAAA;cAEK;SAkKH;kBAAA,WAlKF;EAAA;cAEK;SAgKH;kBAAA,WAhKF;EAAA;cAEK;SA8JH;UAbD,IAjJL,UA8JM,WA9JE;EAAA;gBAGI;SA2JN;GAAA,WA3JC,KAAK,EACG,IAAA;WAAhB,oBAAgB;GAAA;GA0JT;;kBAvJS,YACS;SAsJlB;GAAA,mBAtJM;GAsJN;;mBAnJU,eACY;SAkJtB;GAAA,sBAlJS;GAkJT;;WA9IC;SA8ID;GA9IR,iBA8IQ;;aA3IE;SA2IF;UA3IH,IACiB;IAArB,QA0IO;IAzIP,SAyIO;IAvIP,QAAI,aAAc;IAuIX,uBArIQ;IAEf,YAyIgB,IANT,oBAnIsB;oBAC7B,aAAc;IAEd,sBAgIO;IA/HP,qBAAe,6CAAiC,EA+HzC;IA9HP,sBAoIgB,IANT,oBA9HuB;IAE9B,gBAAmB;IACnB,gBAAmB;IACnB,aAgIgB,IAhIE,gBAAc;IA0HzB,oBAxHK,EAAE,gBAAc;;MAnBxB,WAAU;;kBAqBE,EACC;SAqHV;GArHR,mBA2HiB,IANT,oBArHmB;GAC3B,YAAe;GACf,gBAAmB;GACnB,gBAAmB;GACnB,aAuHiB,IAvHC,aAAW;GAC7B,aAyHkC,IAzHvB,EAAE;GAEb,aAuHkC,IAvHvB,KA6FJ,IAiBC,oBAS0B,IAvHA,EAAE;GAG/B,GA2GG,mBA1GG;IAAT,YAAgB;IAChB,cAAkB;IAClB,cAAkB;UACnB,GAuGO,sBAtGM;IAAZ,YAAgB;IAChB,cAAkB;IAClB,cAAkB;UAEf;IAAH,YAAoB,IACyC;KAA5D,eAAe,EAAG;KAClB,eAAe,EAAG;;OAFC,uBAAuB,EAAE,EAkGvC;IA/FN,cAAkB;IAClB,cAAkB;;GAEpB,yBAAmB,EAAE,OAAO,OA2ErB,IAiBC,YA5FqC,QA2EtC,IAiBC,aA5FwD,QAAQ;GACxE;GAEA;;oBAGiB;SAsFT;GArFR,iBAqFQ;GApFR,aA6FkC,IA7FvB,WAAS;GACpB,iBAyFiB,IANT,YAnFY;GACpB,iBAwFiB,IANT,aAlFa;UAEd;WAgFC;UA/EP,EACC;;MAAA,WAuFgC,IAvFvB,WAAS;oBAEjB,KAAA;;OAAA,6BA2DI,IA3DK,WAAS;OAClB,6BA0DI,IA1DK,WAAS;OAClB,6BA6DI,IA7DK,WAAS;OAClB,6BA4DI,IA5DK,WAAS;;;;;UACpB,EACC;MAAA,cAAQ,OAuEF;MAtEN,iBACe;OAAd,GAAA,QACK;eA4Cc,SAiCY,IA7ElB,EAoER;cAlED;eA0Ce,SAwBd,YAS0B,IA3EX,EAkEf;;;MAhEN,uBAyEgC,IAzEb,WAAS;MAE5B,qBAiDK,IAjDY,iBAuEe,IAvEG,EAAE;MAErC,WAkEe,IAvBV,IA3CO,WAAS,gBAAc;MAEnC,2BA6CK,IA7CgB,KAgEN,IAhEc,iBAAe;MAC5C,kBA+De,IA/DD,KAAK;MACnB,qBA8De,IA9DE,iBAAe;aAG5B;OAAH,GAAA,QACK;;sBACH,KAAA;;SAAA,6BAkCE,IAlCO,WAAS;SAClB,6BAiCE,IAjCO,WAAS;SAClB,6BAgCE,IAhCO,WAAS;SAClB,6BAmCE,IAnCO,WAAS;;;sBAElB,KAAA;;SAAA,6BAiCE,IAjCO,WAAS;SAClB,6BA4BE,IA5BO,WAAS;SAClB,6BA+BE,IA/BO,WAAS;SAClB,6BA8BE,IA9BO,WAAS;;;;cAEhB;;sBACF,KAAA;;SAAA,6BAuBE,IAvBO,WAAS;SAClB,6BAsBE,IAtBO,WAAS;SAClB,6BAyBE,IAzBO,WAAS;SAClB,6BAoBE,IApBO,WAAS;;;sBAElB,KAAA;;SAAA,6BAkBE,IAlBO,WAAS;SAClB,6BAqBE,IArBO,WAAS;SAClB,6BAoBE,IApBO,WAAS;SAClB,6BAmBE,IAnBO,WAAS;;;;;;;UACtB,EACC;MAAA,WAuCgC,IAvCvB,KAaJ,IAbY,WAuCe,IAvCH,EAAE;MAE/B,UAqCgC,IArCxB,KAAK;MAEb,iBAaK,IAbQ,WAmCmB,IAnCP,IAAI;MAC7B,iBA+Be,IA/BF,IAAI;MACjB,cAiCgC,IAjCtB,WAAU,UAAU;MAE9B,aACQ,KAAA;;qBACN,KAAA;;QAAA,gBAAG;QACH,gBAEG,IAFE,WAAS;;;qBAEd,KAAA;;QAAA,gBAAG,IAAE,WAAS;QACd,gBAGG,IAHE,WAAS;;;qBAEd,KAAA;;QAAA,gBACG,IADE,WAAS;QACd,gBAAG,IAAE,WAAS;;;;;MAEhB,kBAiBe,IAjBD,KAAK;aACd;;eAAA,KAAA,OACM;QAAV,UAAM;sBAEL,KAAA;;SAAA,6BAVG,IAUM,EAAE;SACX,6BAXG,IAWM,EAAE;SACX,6BARG,IAQM,EAAE;SACX,6BATG,IASM,EAAE;;;;;;;;;;;eAED,EAAE,gBAAc,eACY;SAClC;GADR,UAAQ,EAAE,gBACF;GAAA,OAAA;SACP,EACC;KAAA;;;SACD,EACC;KAAA;KACA;KACA,qBAAe,IANT,oBAMuB;KAC7B,YAAe;KACf,kBAAkB;KAClB,kBAAc,EATR,yBAS0B,IAAE,EAAE;KACpC;KACA;KACA,UAAQ,EAAE,gBAZJ;KAaN;;;SACD,EACC;KAAA;;;;;;;CAEJ,mDAAoC,sDAAA,EAAE,WACQ;EAA7C,qBAAe;SACR;UAAA;SACN,EACC;KACA,cAAkB;KAClB,YAAgB;KAChB,cAAkB,qBAAmB;YACpC;;SACF,EACC;KACA,cAAkB;KAClB,YAAgB;KAChB,cAAkB,mBAAiB;YAClC;;SACF,EACC;KACA,cAAkB;KAClB,YAAgB;KAChB,cAAkB,qBAAmB;YACpC;;;;;;CAGJ,gBAAW,mBAAA,EAAE,gBAAc,WACQ;EAAlC,2BAA+B;EAC/B;EACK,QAAA,KAAA,gBACa;GAAT,OAAA;SACP,EACC;KAAA,gBAAY,EAAE,WAAQ,WAAQ,WAAQ;;;SACvC,EACC;KAAA,mBAAe,EAAE,WAAQ,WAAQ,WAAQ;;;SAC1C,EACC;KAAA,mBAAe,EAAE,WAAQ,WAAQ,WAAQ;;;;;;SAC5C;;CA7OD,wBAAA","file":"Card.js","sourcesContent":["use\n\tmsl.@.Seq.Array fill\n\tmsl.math.random random-int-upto\n\t.context2d-util pencil-circle! pencil-lines! pencil-square! pencil-round-rect! pencil-tri!\n\t.dom new-node set-content!\n\nCard. class\n\tconstruct! .cell\n\t\t| Set in .randomize!\n\t\t.data ::= [0 0 0 0]\n\t\t.selected? ::= false\n\t\t.highlighted? ::= false\n\n\t\"resize!\" !|width height\n\t\t.width := width\n\t\t.height := height\n\t\t.draw!()\n\n\t\"min-size\" |\n\t\tMath.min .width .height\n\n\t\"shape-id\" |\n\t\t.data[0]\n\t\"color-id\" |\n\t\t.data[1]\n\t\"shade-id\" |\n\t\t.data[2]\n\t\"n-shapes\" |\n\t\t+ 1 .data[3]\n\n\t\"randomize!\" !|\n\t\t.data := fill 4 |\n\t\t\trandom-int-upto 3\n\t\t.draw!()\n\n\t\"set-selected!\" !|selected?\n\t\t.selected? := selected?\n\t\t.draw!()\n\n\t\"set-highlight!\" !|highlighted?\n\t\t.highlighted? := highlighted?\n\t\t.draw!()\n\n\t\"draw!\" !|\n\t\tset-content! .cell .-canvas()\n\n\t\"-canvas\" |\n\t\twith new-node \"canvas\"\n\t\t\t_.width := .width\n\t\t\t_.height := .height\n\n\t\t\tc = _.getContext \"2d\"\n\n\t\t\t.-draw-border! c\n\n\t\t\tc.lineWidth := / .min-size() 24\n\t\t\tc.lineJoin = \"round\"\n\n\t\t\tshape-regions = .-shape-regions()\n\t\t\tstripe-color = set-stroke-and-get-stripe-color! c .color-id()\n\t\t\tshadow-offset = / .min-size() 48\n\n\t\t\tc.shadowOffsetX := shadow-offset\n\t\t\tc.shadowOffsetY := shadow-offset\n\t\t\tc.shadowBlur := / shadow-offset 2\n\n\t\t\t.-do-shade! c shape-regions stripe-color\n\n\t\"-draw-border!\" !|c\n\t\tline-width = / .min-size() 24\n\t\tc.lineWidth := line-width\n\t\tc.shadowOffsetX := line-width\n\t\tc.shadowOffsetY := line-width\n\t\tc.shadowBlur := / line-width 2\n\t\tmargin = * 2 line-width\n\t\t|| radius of rounding\n\t\tcorner = * 0.33 (- .min-size() (* 2 margin))\n\n\t\tcase!\n\t\t\t.selected?\n\t\t\t\tc.fillStyle := \"#044\"\n\t\t\t\tc.strokeStyle := \"#f80\"\n\t\t\t\tc.shadowColor := \"rgba(255,128,0,0.5)\"\n\t\t\t.highlighted?\n\t\t\t\tc.fillStyle := \"#202\"\n\t\t\t\tc.strokeStyle := \"#80f\"\n\t\t\t\tc.shadowColor := \"rgba(128,0,255,0.5)\"\n\t\t\telse\n\t\t\t\tc.fillStyle := with c.createLinearGradient 0 0 .width .height\n\t\t\t\t\t_.addColorStop 0 \"rgba(255, 255, 128, 0.2)\"\n\t\t\t\t\t_.addColorStop 1 \"rgba(128, 255, 255, 0.2)\"\n\t\t\t\tc.strokeStyle := \"#000\"\n\t\t\t\tc.shadowColor := \"rgba(0,0,0,0.5)\"\n\n\t\tpencil-round-rect! c margin margin (- .width margin) (- .height margin) corner\n\t\tc.stroke()\n\t\t|| Fill after stroke so it will show up over stroke shadow.\n\t\tc.fill()\n\n\t\"-shape-regions\" |\n\t\t| Margin for shapes, not card border.\n\t\tmin-size = .min-size()\n\t\tmargin = * min-size 0.1\n\t\tcenter-x = / .width 2\n\t\tcenter-y = / .height 2\n\n\t\tswitch .n-shapes()\n\t\t\t1\n\t\t\t\tsize = * min-size 0.32\n\t\t\t\t.\n\t\t\t\t\tmin-x. - center-x size\n\t\t\t\t\tmin-y. - center-y size\n\t\t\t\t\tmax-x. + center-x size\n\t\t\t\t\tmax-y. + center-y size\n\t\t\t2\n\t\t\t\twide? = <? .height .width\n\t\t\t\tmax-size = case\n\t\t\t\t\twide?\n\t\t\t\t\t\tMath.min (* 2 .width) .height\n\t\t\t\t\telse\n\t\t\t\t\t\tMath.min .width (* 2 .height)\n\t\t\t\t|| Space in between the two shapes.\n\t\t\t\tbetween-margin = * max-size 0.1\n\n\t\t\t\ttotal-margin = + between-margin (* 2 margin)\n\t\t\t\t|| The size of one shape.\n\t\t\t\tsize = / (- max-size total-margin) 2\n\n\t\t\t\tdist-from-center = + size (/ between-margin 2)\n\t\t\t\thalf-size = / size 2\n\t\t\t\thalf-between = / between-margin 2\n\n\t\t\t\tcase\n\t\t\t\t\twide?\n\t\t\t\t\t\t.\n\t\t\t\t\t\t\tmin-x. - center-x dist-from-center\n\t\t\t\t\t\t\tmin-y. - center-y half-size\n\t\t\t\t\t\t\tmax-x. - center-x half-between\n\t\t\t\t\t\t\tmax-y. + center-y half-size\n\t\t\t\t\t\t.\n\t\t\t\t\t\t\tmin-x. + center-x half-between\n\t\t\t\t\t\t\tmin-y. - center-y half-size\n\t\t\t\t\t\t\tmax-x. + center-x dist-from-center\n\t\t\t\t\t\t\tmax-y. + center-y half-size\n\t\t\t\t\telse\n\t\t\t\t\t\t.\n\t\t\t\t\t\t\tmin-x. - center-x half-size\n\t\t\t\t\t\t\tmin-y. - center-y dist-from-center\n\t\t\t\t\t\t\tmax-x. + center-x half-size\n\t\t\t\t\t\t\tmax-y. - center-y half-between\n\t\t\t\t\t\t.\n\t\t\t\t\t\t\tmin-x. - center-x half-size\n\t\t\t\t\t\t\tmin-y. + center-y half-between\n\t\t\t\t\t\t\tmax-x. + center-x half-size\n\t\t\t\t\t\t\tmax-y. + center-y dist-from-center\n\t\t\t3\n\t\t\t\tsize = * 0.33 (- min-size (* 2 margin))\n\t\t\t\t|| Centers of shapes are this far from (center-x, middle-y)\n\t\t\t\trad = * size 0.8\n\t\t\t\t|| Moved a little down for balance.\n\t\t\t\tmiddle-y = + center-y (* rad 0.2)\n\t\t\t\thalf-rad = / rad 2\n\t\t\t\tx-rad = * half-rad (Math.sqrt 3)\n\t\t\t\t|| Array of centers\n\t\t\t\tpoints =\n\t\t\t\t\t.\n\t\t\t\t\t\tx. center-x\n\t\t\t\t\t\ty. - middle-y rad\n\t\t\t\t\t.\n\t\t\t\t\t\tx. - center-x x-rad\n\t\t\t\t\t\ty. + middle-y half-rad\n\t\t\t\t\t.\n\t\t\t\t\t\tx. + center-x x-rad\n\t\t\t\t\t\ty. + middle-y half-rad\n\n\t\t\t\thalf-size = / size 2\n\t\t\t\t@for points\n\t\t\t\t\tx y = _\n\t\t\t\t\t.\n\t\t\t\t\t\tmin-x. - x half-size\n\t\t\t\t\t\tmin-y. - y half-size\n\t\t\t\t\t\tmax-x. + x half-size\n\t\t\t\t\t\tmax-y. + y half-size\n\n\t\"-do-shade!\" !|c shape-regions stripe-color\n\t\tpencil! c shape-regions .shape-id()\n\t\tswitch! .shade-id()\n\t\t\t0\n\t\t\t\tc.stroke()\n\t\t\t1\n\t\t\t\tc.save()\n\t\t\t\tc.clip()\n\t\t\t\tstripe-width = / .min-size() 32\n\t\t\t\tc.lineWidth := stripe-width\n\t\t\t\tc.stroke-style := stripe-color\n\t\t\t\tpencil-lines! c .width .height (* 2 stripe-width)\n\t\t\t\tc.stroke()\n\t\t\t\tc.restore()\n\t\t\t\tpencil! c shape-regions .shape-id()\n\t\t\t\tc.stroke()\n\t\t\t2\n\t\t\t\tc.fill()\n\nset-stroke-and-get-stripe-color! = |c color-id\n\tshadow-alpha = 0.2\n\tswitch color-id\n\t\t0\n\t\t\t| Orange\n\t\t\tc.strokeStyle := \"#ea0\"\n\t\t\tc.fillStyle := \"#ea0\"\n\t\t\tc.shadowColor := \"rgba(255, 255, 0, {shadow-alpha})\"\n\t\t\t\"#ff8\"\n\t\t1\n\t\t\t| Green\n\t\t\tc.strokeStyle := \"#280\"\n\t\t\tc.fillStyle := \"#280\"\n\t\t\tc.shadowColor := \"rgba(0, 255, 0, {shadow-alpha})\"\n\t\t\t\"#8f8\"\n\t\t2\n\t\t\t| Pink\n\t\t\tc.strokeStyle := \"#a0a\"\n\t\t\tc.fillStyle := \"#a0a\"\n\t\t\tc.shadowColor := \"rgba(255, 0, 255, {shadow-alpha})\"\n\t\t\t\"#f8f\"\n\n\npencil! = |c shape-regions shape-id\n\tc.globalCompositeOperation := \"source-over\"\n\tc.beginPath()\n\tfor! shape-regions\n\t\tswitch! shape-id\n\t\t\t0\n\t\t\t\tpencil-tri! c _.min-x _.min-y _.max-x _.max-y\n\t\t\t1\n\t\t\t\tpencil-square! c _.min-x _.min-y _.max-x _.max-y\n\t\t\t2\n\t\t\t\tpencil-circle! c _.min-x _.min-y _.max-x _.max-y\n\tc.closePath()\n\n"],"sourceRoot":"/source/"}